<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.alibaba.com/schema/stat"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd


            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd http://www.alibaba.com/schema/stat http://www.alibaba.com/schema/stat.xsd">
    <context:component-scan base-package="top.xiongmingcai.restful"/>
    <!--启用spring mvc注解开发模式-->
    <mvc:annotation-driven>
        <!--解决响应体中文乱码问题-->
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <!--不通过模板引擎直接产生的数据时生效-->
                        <value>text/html;charset=utf-8</value>
                        <!--不通过模板引擎直接产生JSON content type的数据时生效-->
                        <value>application/json;charset=utf-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!--将图片/js/css等静态资源排除在外，提高执行效率-->
    <mvc:default-servlet-handler/>


    <!--启动Freemarker模板引擎-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <!--Freemarker模板引擎产生HTML片段时生效-->
        <property name="contentType" value="text/html;charset=utf-8"/>
        <!--指定Freemarker模板文件拓展名-->
        <property name="suffix" value=".ftl"/>
    </bean>


    <!--配置Freemarker参数-->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <!--设置保存模板的目录-->
        <property name="templateLoaderPath" value="/WEB-INF/freemarker"/>
        <!--其他模板引擎设置-->
        <property name="freemarkerSettings">
            <props>
                <!--设置Freemarker脚本读取已UTF-8格式读取文件模板-->
                <prop key="defaultEncoding">UTF-8</prop>
            </props>
        </property>
    </bean>


    <mvc:interceptors>
        <mvc:interceptor>
            <!--拦截需要拦截的URL-->
            <mvc:mapping path="/**"/>
            <!--静态资源不做拦截-->
            <mvc:exclude-mapping path="/assets/**"/>
            <mvc:exclude-mapping path="/resources/**"/>
            <mvc:exclude-mapping path="/login*"/>
            <!--指明那个类对拦截的URL处理-->
            <bean class="top.xiongmingcai.restful.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!--Spring与MyBatis整合配置-->
    <bean class="com.alibaba.druid.pool.DruidDataSource" id="dataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url"
                  value="jdbc:mysql://localhost:3306/reader?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false&amp;serverTimezone=GMT"/>
        <property name="username" value="root"/>
        <property name="password" value="NewPassword"/>
        <property name="initialSize" value="5"/>
        <property name="maxActive" value="20"/>
    </bean>
    <!--这个类是Spring 提供的,JdbcTemplate提供数据CURD的API-->
    <!--    <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sessionFactory">-->
    <bean class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean" id="sessionFactory">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>
    <!--配置Mapper扫描器-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="top.xiongmingcai.restful.dao"/>
    </bean>
    <!--申明式事务配置-->
    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!-- 开启Spring Task 定时任务的注解模式-->
    <task:annotation-driven/>
    <!--二维码-->
    <bean class="com.google.code.kaptcha.impl.DefaultKaptcha" id="kaptcha">
        <property name="config">
            <bean class="com.google.code.kaptcha.util.Config">
                <constructor-arg>
                    <props>
                        <prop key="kaptcha.border">no</prop>
                        <prop key="kaptcha.image.width">120</prop>
                        <prop key="kaptcha.textproducer.font.color">blue</prop>
                        <prop key="kaptcha.textproducer.font.size">40</prop>
                        <prop key="kaptcha.textproducer.char.length">4</prop>
                    </props>
                </constructor-arg>
            </bean>
        </property>
    </bean>
</beans>